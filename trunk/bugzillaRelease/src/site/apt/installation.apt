~~
~~ bugzillaRelease Maven Mojo. Plugin to close release on Bugzilla when make release with Maven.
~~ Copyright (C) 2009 Autentia Real Business Solutions S.L.
~~
~~ This program is free software: you can redistribute it and/or modify
~~ it under the terms of the GNU General Public License as published by
~~ the Free Software Foundation, either version 3 of the License.
~~
~~ This program is distributed in the hope that it will be useful,
~~ but WITHOUT ANY WARRANTY; without even the implied warranty of
~~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
~~ GNU General Public License for more details.
~~
~~ You should have received a copy of the GNU General Public License
~~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
~~
~~ This program is free software: you can redistribute it and/or modify
~~ it under the terms of the GNU General Public License as published by
~~ the Free Software Foundation, either version 3 of the License.
~~
~~ This program is distributed in the hope that it will be useful,
~~ but WITHOUT ANY WARRANTY; without even the implied warranty of
~~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
~~ GNU General Public License for more details.
~~
~~ You should have received a copy of the GNU General Public License
~~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
~~

Instalación y configuración
~~~~~~~~~~~~~~~~~~~

* Instalación
~~~~~~~~~~~~

	Para utilizar el plugin de cambios, debemos tener instalado en el repositorio local el fichero ".jar" del plugin. 
	Esto lo podemos hacer bien por configuración en el fichero POM del proyecto en el que queramos usar el plugin o bien de forma manual.  

** Instalación por medio del POM
~~~~~~~~~~~~

	Hay que dar de alta un nuevo repositorio para que sea el propio Maven el encargado de descargarse a nuestro repositorio local el plugin de cambios. 
	Debemos añadir la siguiente configuración:

+-------------+
<pluginRepositories>
	<pluginRepository>
	    <id>AutentiaBugzillaMaven-release</id>
	    <name>Local Maven repository of releases</name>
	    <url>http://bugzillachanges.sourceforge.net/maven-repository</url>
	    <snapshots>
	        <enabled>false</enabled>
	    </snapshots>
	    <releases>
	        <enabled>true</enabled>
	    </releases>
	</pluginRepository>
</pluginRepositories> 
+-------------+  

** Instalación en el repositorio local
~~~~~~~~~~~~
	
	Descargamos el fichero ".jar" del plugin y lo instalamos en el repositorio local para poder usarlo en el resto de proyectos.
	Para instalarlo en nuestro repositorio local ejecutamos:
	
+-------------+
mvn install:install-file -DartifactId=releaseBugzilla -DgroupId=com.autentia.mvn.plugin -Dversion=***VERSION DEL PLUGIN*** 
-DgeneratePom=true -Dfile=***FIHERO JAR*** -Dpackaging=jar 
+-------------+	
	


* Configuración del pom.xml de los proyectos que utilizan el plugin
~~~~~~~~~~~~

  Para que el plugin pueda conectarse al servidor del Bugzilla y realizar las acciones automáticas en el producto, debemos configurarlo en el fichero "pom.xml", 
  teniendo en cuenta que toma como URL base del bugzilla la URL que esté configurada en el elemento <issueManagement>.
  
+-------------+
<project ...>
  .....    
  <issueManagement>
  	<system>Bugzilla</system>
  	<url>https://host/cgi-bin/bugzilla3/</url>
  </issueManagement>
  .....
  <build>
		<plugins>
            .....
			<plugin>
				<groupId>com.autentia.mvn.plugin</groupId>
				<artifactId>bugzillaRelease</artifactId>
				<version> *** versión del plugin *** </version>
				<configuration>
        			<productName> *** nombre del producto en el bugzilla *** </productName>
        			<bugzillaUser>*** usuario del bugzilla ***</bugzillaUser>
        			<bugzillaPassword>*** contraseña del usuario del bugzilla ***</bugzillaPassword>
				</configuration>
			</plugin>
		</plugins>
  </build>
  .....
  <pluginRepositories>
	  <pluginRepository>
		  <id>AutentiaBugzillaMaven-release</id>
		  <name>Local Maven repository of releases</name>
		  <url>http://bugzillachanges.sourceforge.net/maven-repository</url>
		  <snapshots>
		  	<enabled>false</enabled>
		  </snapshots>
		  <releases>
		  	<enabled>true</enabled>
		  </releases>
	  </pluginRepository>
  </pluginRepositories>
  .....
</project>    
+-------------+  

* Parámetros de configuración
~~~~~~~~~~~~

	* productName: Nombre del producto en el Bugzilla del que obtenemos la lista de bugs. Obligatorio. 
	
    * bugzillaUser: Usuario para el login en el Bugzilla. Obligatorio.
    
    * bugzillaPassword: Contraseña del usuario para el login en el Bugzilla. Obligatorio.
    
    * loginPage: Página de login en el Bugzilla. (Por defecto "index.cgi").
    
    * loginRequired: Parámetro para indicar si es necesario hacer login en el Bugzilla para recuperar la lista de bugs. (Por defecto "true").
    
    * parentOnly: Al tener los proyectos de Maven herencia, con este parámetros le indicamos que sólo genere la información de cambios en el proyecto padre. (Por defecto "true").
    
    * versionSuffix: El nombre de la versión es común que tenga un sufijo mientras se está desarrollando, por lo que al consultar en el Bugzilla se debe eliminar. (Por defecto "-SNAPSHOT").
    
    * bugsToClose: Identifica el "status" de los bugs que deben ser cerrados al generar la versión. (Por defecto "RESOLVED, CLOSED").
    
    * bugsToMove: Identifica el "status" de los bugs que deben ser movidos al nuevo "milestone". (Por defecto "UNCONFIRMED, NEW, ASSIGNED, REOPENED").
    
* Ejecución  
~~~~~~~~~~~~

	Para ejecutar el plugin lo ejecutaremos con el siguiente comando:
	
+-----------------+
mvn com.autentia.mvn.plugin:releaseBugzilla:release
+-----------------+	  
	







